# Importando biblioteca
import requests
import cv2
import numpy as np
import matplotlib.pyplot as plt
 
# lendo o arquivo de imagem
url = 'https://media.geeksforgeeks.org/wp-content/cdn-uploads/20210401173418/Webp-compressed.jpg'
response = requests.get(url, stream=True)
 
with open('image.png', 'wb') as f:
    f.write(response.content)
 
img = cv2.imread('image.png')
 
# Convertendo a imagem em Scala de cinza
gray_image = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
 
# Calculando SVD
u, s, v = np.linalg.svd(gray_image, full_matrices=False)
 
# Inspecionando formas de Matrizes
print(f'u.shape:{u.shape},s.shape:{s.shape},v.shape:{v.shape}')

----------------------------------------------------------------------------------------------------------------

# Importando biblioteca
import seaborn as sns
 
var_explained = np.round(s**2/np.sum(s**2), decimals=6)
 
# Vetores singulares
print(f'Variação pelos 20 principais vetores singulares:\n{var_explained[0:20]}')
 
sns.barplot(x=list(range(1, 21)),
            y=var_explained[0:20], color="dodgerblue")
 
plt.title('Gráfico de Variação')
plt.xlabel('Vetor Singular', fontsize=16)
plt.ylabel('Variação explicada', fontsize=16)
plt.tight_layout()
plt.show()

----------------------------------------------------------------------------------------------------------------

# Plotar imagens com diferentes números de componentes
comps = [3648, 1, 5, 10, 15, 20]
plt.figure(figsize=(12, 6))
 
for i in range(len(comps)):
    low_rank = u[:, :comps[i]] @ np.diag(s[:comps[i]]) @ v[:comps[i], :]
     
    if(i == 0):
        plt.subplot(2, 3, i+1),
        plt.imshow(low_rank, cmap='gray'),
        plt.title(f'Imagem atual with n_components = {comps[i]}')
     
    else:
        plt.subplot(2, 3, i+1),
        plt.imshow(low_rank, cmap='gray'),
        plt.title(f'n_components = {comps[i]}')
